{"version":3,"sources":["node_modules/linkifyjs/lib/linkify/utils/class.js","node_modules/linkifyjs/lib/linkify/utils/options.js","node_modules/linkifyjs/lib/linkify/core/state.js","node_modules/linkifyjs/lib/linkify/core/tokens/create-token-class.js","node_modules/linkifyjs/lib/linkify/core/tokens/text.js","node_modules/linkifyjs/lib/linkify/core/scanner.js","node_modules/linkifyjs/lib/linkify/core/tokens/multi.js","node_modules/linkifyjs/lib/linkify/core/parser.js","node_modules/linkifyjs/lib/linkify.js","node_modules/linkifyjs/index.js","node_modules/linkifyjs/lib/linkify-string.js","node_modules/linkifyjs/string.js","arena-chat.js","index.js"],"names":["mqttc","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","ARENAChat","constructor","st","settings","userid","undefined","cameraid","username","realm","scene","persist_uri","location","protocol","hostname","port","keepalive_interval_ms","mqtt_host","mqtt_username","mqtt_token","liveUsers","setInterval","userCleanup","bind","subscribePrivateTopic","subscribePublicTopic","publishPrivateTopic","publishPublicTopic","unreadMsgs","alertBox","document","createElement","className","innerHTML","body","appendChild","btnGroup","chatBtn","setAttribute","usersBtn","lmBtn","chatDot","chatPopup","style","display","closeChatBtn","msgList","formDiv","msgTxt","toSel","addToSelOptions","msgBtn","usersPopup","closeUsersBtn","muteAllDiv","silenceAllBtn","title","label","fontSize","nUserslabel","userDiv","usersList","lmPopup","closeLmBtn","lmDiv","lmList","_this","displayAlert","onclick","scrollTop","scrollHeight","focus","connect","populateUserList","value","length","sendMsg","addEventListener","event","preventDefault","keyCode","isUserAuthenticated","swal","text","icon","buttons","dangerMode","then","sendMute","ctrlMsg","moveToCamera","localStorage","getItem","removeItem","moveToFrontOfCamera","window","e","detail","name","keepalive","start","force","populateLandmarkList","getUserList","connected","Paho","Client","msg","object_id","type","to_uid","from_uid","from_un","from_scene","willMessage","Message","JSON","stringify","slice","destinationName","onSuccess","console","info","subscribe","onConnectionLost","onMessageArrived","keepaliveInterval","clearInterval","onFailure","error","userName","password","message","cameraId","includes","decodeURI","from_desc","options","selectedIndex","Date","toLocaleTimeString","dstTopic","send","txtAddMsg","mqttMsg","parse","payloadString","err","endsWith","un","cid","ts","getTime","abtn","getElementById","backgroundImage","click","status","whoClass","statusSpan","msgSpan","host","regex","RegExp","match","linkify","target","selVal","Object","keys","userList","forEach","key","push","uid","sort_key","sort","a","b","localeCompare","user","uli","uBtnCtnr","fuspan","sspan","op","data","fetch","ok","persistRes","json","landmarks","lmObj","Array","prototype","apply","attributes","lm","substring","lmBtnCtnr","lspan","moveToLandmark","tryconnect","to","now","timeMs","setTimeout","objectId","sceneEl","querySelector","landmarkObj","myCamera","direction","THREE","Vector3","object3D","getWorldDirection","distance","pos","getWorldPosition","position","copy","add","multiplyScalar","y","components","yawObject","rotation","Math","atan2","x","z","setItem","href","URL","searchParams","set","toCam","clone","arenaChat","ARENA","Chat","init","chat_settings","log","globals","idTag","camName","displayName","defaults","scenenameParam","persistHost","persistPath","mqttParam","mqttToken"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.inherits = inherits;\nfunction inherits(parent, child) {\n\tvar props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tvar extended = Object.create(parent.prototype);\n\tfor (var p in props) {\n\t\textended[p] = props[p];\n\t}\n\textended.constructor = child;\n\tchild.prototype = extended;\n\treturn child;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar defaults = {\n\tdefaultProtocol: 'http',\n\tevents: null,\n\tformat: noop,\n\tformatHref: noop,\n\tnl2br: false,\n\ttagName: 'a',\n\ttarget: typeToTarget,\n\tvalidate: true,\n\tignoreTags: [],\n\tattributes: null,\n\tclassName: 'linkified' // Deprecated value - no default class will be provided in the future\n};\n\nexports.defaults = defaults;\nexports.Options = Options;\nexports.contains = contains;\n\n\nfunction Options(opts) {\n\topts = opts || {};\n\n\tthis.defaultProtocol = opts.hasOwnProperty('defaultProtocol') ? opts.defaultProtocol : defaults.defaultProtocol;\n\tthis.events = opts.hasOwnProperty('events') ? opts.events : defaults.events;\n\tthis.format = opts.hasOwnProperty('format') ? opts.format : defaults.format;\n\tthis.formatHref = opts.hasOwnProperty('formatHref') ? opts.formatHref : defaults.formatHref;\n\tthis.nl2br = opts.hasOwnProperty('nl2br') ? opts.nl2br : defaults.nl2br;\n\tthis.tagName = opts.hasOwnProperty('tagName') ? opts.tagName : defaults.tagName;\n\tthis.target = opts.hasOwnProperty('target') ? opts.target : defaults.target;\n\tthis.validate = opts.hasOwnProperty('validate') ? opts.validate : defaults.validate;\n\tthis.ignoreTags = [];\n\n\t// linkAttributes and linkClass is deprecated\n\tthis.attributes = opts.attributes || opts.linkAttributes || defaults.attributes;\n\tthis.className = opts.hasOwnProperty('className') ? opts.className : opts.linkClass || defaults.className;\n\n\t// Make all tags names upper case\n\tvar ignoredTags = opts.hasOwnProperty('ignoreTags') ? opts.ignoreTags : defaults.ignoreTags;\n\tfor (var i = 0; i < ignoredTags.length; i++) {\n\t\tthis.ignoreTags.push(ignoredTags[i].toUpperCase());\n\t}\n}\n\nOptions.prototype = {\n\t/**\n  * Given the token, return all options for how it should be displayed\n  */\n\tresolve: function resolve(token) {\n\t\tvar href = token.toHref(this.defaultProtocol);\n\t\treturn {\n\t\t\tformatted: this.get('format', token.toString(), token),\n\t\t\tformattedHref: this.get('formatHref', href, token),\n\t\t\ttagName: this.get('tagName', href, token),\n\t\t\tclassName: this.get('className', href, token),\n\t\t\ttarget: this.get('target', href, token),\n\t\t\tevents: this.getObject('events', href, token),\n\t\t\tattributes: this.getObject('attributes', href, token)\n\t\t};\n\t},\n\n\n\t/**\n  * Returns true or false based on whether a token should be displayed as a\n  * link based on the user options. By default,\n  */\n\tcheck: function check(token) {\n\t\treturn this.get('validate', token.toString(), token);\n\t},\n\n\n\t// Private methods\n\n\t/**\n  * Resolve an option's value based on the value of the option and the given\n  * params.\n  * @param {String} key Name of option to use\n  * @param operator will be passed to the target option if it's method\n  * @param {MultiToken} token The token from linkify.tokenize\n  */\n\tget: function get(key, operator, token) {\n\t\tvar optionValue = void 0,\n\t\t    option = this[key];\n\t\tif (!option) {\n\t\t\treturn option;\n\t\t}\n\n\t\tswitch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {\n\t\t\tcase 'function':\n\t\t\t\treturn option(operator, token.type);\n\t\t\tcase 'object':\n\t\t\t\toptionValue = option.hasOwnProperty(token.type) ? option[token.type] : defaults[key];\n\t\t\t\treturn typeof optionValue === 'function' ? optionValue(operator, token.type) : optionValue;\n\t\t}\n\n\t\treturn option;\n\t},\n\tgetObject: function getObject(key, operator, token) {\n\t\tvar option = this[key];\n\t\treturn typeof option === 'function' ? option(operator, token.type) : option;\n\t}\n};\n\n/**\n * Quick indexOf replacement for checking the ignoreTags option\n */\nfunction contains(arr, value) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (arr[i] === value) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction noop(val) {\n\treturn val;\n}\n\nfunction typeToTarget(href, type) {\n\treturn type === 'url' ? '_blank' : null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;","\"use strict\";\n\nexports.__esModule = true;\nfunction createTokenClass() {\n\treturn function (value) {\n\t\tif (value) {\n\t\t\tthis.v = value;\n\t\t}\n\t};\n}\n\nexports.createTokenClass = createTokenClass;","'use strict';\n\nexports.__esModule = true;\nexports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\nvar TextToken = (0, _createTokenClass.createTokenClass)();\nTextToken.prototype = {\n\ttoString: function toString() {\n\t\treturn this.v + '';\n\t}\n};\n\nfunction inheritsToken(value) {\n\tvar props = value ? { v: value } : {};\n\treturn (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n}\n\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\nvar DOMAIN = inheritsToken();\n\n/**\n\t@class AT\n\t@extends TextToken\n*/\nvar AT = inheritsToken('@');\n\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\nvar COLON = inheritsToken(':');\n\n/**\n\t@class DOT\n\t@extends TextToken\n*/\nvar DOT = inheritsToken('.');\n\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\nvar PUNCTUATION = inheritsToken();\n\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\nvar LOCALHOST = inheritsToken();\n\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\nvar NL = inheritsToken('\\n');\n\n/**\n\t@class NUM\n\t@extends TextToken\n*/\nvar NUM = inheritsToken();\n\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\nvar PLUS = inheritsToken('+');\n\n/**\n\t@class POUND\n\t@extends TextToken\n*/\nvar POUND = inheritsToken('#');\n\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\nvar PROTOCOL = inheritsToken();\n\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\nvar MAILTO = inheritsToken('mailto:');\n\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\nvar QUERY = inheritsToken('?');\n\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\nvar SLASH = inheritsToken('/');\n\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\nvar UNDERSCORE = inheritsToken('_');\n\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\nvar SYM = inheritsToken();\n\n/**\n\t@class TLD\n\t@extends TextToken\n*/\nvar TLD = inheritsToken();\n\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\nvar WS = inheritsToken();\n\n/**\n\tOpening/closing bracket classes\n*/\n\nvar OPENBRACE = inheritsToken('{');\nvar OPENBRACKET = inheritsToken('[');\nvar OPENANGLEBRACKET = inheritsToken('<');\nvar OPENPAREN = inheritsToken('(');\nvar CLOSEBRACE = inheritsToken('}');\nvar CLOSEBRACKET = inheritsToken(']');\nvar CLOSEANGLEBRACKET = inheritsToken('>');\nvar CLOSEPAREN = inheritsToken(')');\n\nvar AMPERSAND = inheritsToken('&');\n\nexports.Base = TextToken;\nexports.DOMAIN = DOMAIN;\nexports.AT = AT;\nexports.COLON = COLON;\nexports.DOT = DOT;\nexports.PUNCTUATION = PUNCTUATION;\nexports.LOCALHOST = LOCALHOST;\nexports.NL = NL;\nexports.NUM = NUM;\nexports.PLUS = PLUS;\nexports.POUND = POUND;\nexports.QUERY = QUERY;\nexports.PROTOCOL = PROTOCOL;\nexports.MAILTO = MAILTO;\nexports.SLASH = SLASH;\nexports.UNDERSCORE = UNDERSCORE;\nexports.SYM = SYM;\nexports.TLD = TLD;\nexports.WS = WS;\nexports.OPENBRACE = OPENBRACE;\nexports.OPENBRACKET = OPENBRACKET;\nexports.OPENANGLEBRACKET = OPENANGLEBRACKET;\nexports.OPENPAREN = OPENPAREN;\nexports.CLOSEBRACE = CLOSEBRACE;\nexports.CLOSEBRACKET = CLOSEBRACKET;\nexports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\nexports.CLOSEPAREN = CLOSEPAREN;\nexports.AMPERSAND = AMPERSAND;","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _text = require('./tokens/text');\n\nvar TOKENS = _interopRequireWildcard(_text);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tlds = 'aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|aetna|af|afamilycompany|afl|africa|ag|agakhan|agency|ai|aig|aigo|airbus|airforce|airtel|akdn|al|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao|aol|apartments|app|apple|aq|aquarelle|ar|arab|aramco|archi|army|arpa|art|arte|as|asda|asia|associates|at|athleta|attorney|au|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw|aws|ax|axa|az|azure|ba|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb|bbc|bbt|bbva|bcg|bcn|bd|be|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|calvinklein|cam|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|ci|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm|dnp|do|docs|doctor|dodge|dog|doha|domains|dot|download|drive|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dvr|dz|earth|eat|ec|eco|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epost|epson|equipment|er|ericsson|erni|es|esq|estate|esurance|et|etisalat|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|flir|florist|flowers|fly|fm|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|george|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glade|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt|gu|guardian|gucci|guge|guide|guitars|guru|gw|gy|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk|hkt|hm|hn|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr|hsbc|ht|htc|hu|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id|ie|ieee|ifm|ikano|il|im|imamat|imdb|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|intel|international|intuit|investments|io|ipiranga|iq|ir|irish|is|iselect|ismaili|ist|istanbul|it|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|je|jeep|jetzt|jewelry|jio|jlc|jll|jm|jmp|jnj|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kindle|kitchen|kiwi|km|kn|koeln|komatsu|kosher|kp|kpmg|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|lk|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr|ls|lt|ltd|ltda|lu|lundbeck|lupin|luxe|luxury|lv|ly|ma|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc|mckinsey|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|merckmsd|metlife|mg|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk|ml|mlb|mls|mm|mma|mn|mo|mobi|mobile|mobily|moda|moe|moi|mom|monash|money|monster|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|mp|mq|mr|ms|msd|mt|mtn|mtr|mu|museum|mutual|mv|mw|mx|my|mz|na|nab|nadex|nagoya|name|nationwide|natura|navy|nba|nc|ne|nec|net|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nf|nfl|ng|ngo|nhk|ni|nico|nike|nikon|ninja|nissan|nissay|nl|no|nokia|northwesternmutual|norton|now|nowruz|nowtv|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|om|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa|page|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|pccw|pe|pet|pf|pfizer|pg|ph|pharmacy|phd|philips|phone|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pnc|pohl|poker|politie|porn|post|pr|pramerica|praxi|press|prime|pro|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|qvc|racing|radio|raid|re|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|ro|rocher|rocks|rodeo|rogers|room|rs|rsvp|ru|rugby|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sb|sbi|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|sd|se|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg|sh|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|shriram|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl|sling|sm|smart|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|srt|st|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiftcover|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|telecity|telefonica|temasek|tennis|teva|tf|tg|th|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj|tjmaxx|tjx|tk|tkmaxx|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubank|ubs|uconnect|ug|uk|unicom|university|uno|uol|ups|us|uy|uz|va|vacations|vana|vanguard|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vn|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--30rr7y|xn--3bst00m|xn--3ds443g|xn--3e0b707e|xn--3hcrj9c|xn--3oq18vl8pn36a|xn--3pxu8k|xn--42c2d9a|xn--45br5cyl|xn--45brj9c|xn--45q11c|xn--4gbrim|xn--54b7fta0cc|xn--55qw42g|xn--55qx5d|xn--5su34j936bgsg|xn--5tzm5g|xn--6frz82g|xn--6qq986b3xl|xn--80adxhks|xn--80ao21a|xn--80aqecdr1a|xn--80asehdb|xn--80aswg|xn--8y0a063a|xn--90a3ac|xn--90ae|xn--90ais|xn--9dbq2a|xn--9et52u|xn--9krt00a|xn--b4w605ferd|xn--bck1b9a5dre4c|xn--c1avg|xn--c2br7g|xn--cck2b3b|xn--cg4bki|xn--clchc0ea0b2g2a9gcd|xn--czr694b|xn--czrs0t|xn--czru2d|xn--d1acj3b|xn--d1alf|xn--e1a4c|xn--eckvdtc9d|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fhbei|xn--fiq228c5hs|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--fjq720a|xn--flw351e|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--fzys8d69uvgm|xn--g2xx48c|xn--gckr3f0f|xn--gecrj9c|xn--gk3at1e|xn--h2breg3eve|xn--h2brj9c|xn--h2brj9c8c|xn--hxt814e|xn--i1b6b1a6a2e|xn--imr513n|xn--io0a7i|xn--j1aef|xn--j1amh|xn--j6w193g|xn--jlq61u9w7b|xn--jvr189m|xn--kcrx77d1x4a|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--kput3i|xn--l1acc|xn--lgbbat1ad8j|xn--mgb9awbf|xn--mgba3a3ejt|xn--mgba3a4f16a|xn--mgba7c0bbn0a|xn--mgbaakc7dvf|xn--mgbaam7a8h|xn--mgbab2bd|xn--mgbai9azgqp6j|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a|xn--mgbbh1a71e|xn--mgbc0a9azcg|xn--mgbca7dzdo|xn--mgberp4a5d4ar|xn--mgbgu82a|xn--mgbi4ecexp|xn--mgbpl2fh|xn--mgbt3dhd|xn--mgbtx2b|xn--mgbx4cd0ab|xn--mix891f|xn--mk1bu44c|xn--mxtq1m|xn--ngbc5azd|xn--ngbe9e0a|xn--ngbrx|xn--node|xn--nqv7f|xn--nqv7fs00ema|xn--nyqy26a|xn--o3cw4h|xn--ogbpf8fl|xn--p1acf|xn--p1ai|xn--pbt977c|xn--pgbs0dh|xn--pssy2u|xn--q9jyb4c|xn--qcka1pmc|xn--qxam|xn--rhqv96g|xn--rovu88b|xn--rvc1e0am3e|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--tckwe|xn--tiq49xqyj|xn--unup4y|xn--vermgensberater-ctb|xn--vermgensberatung-pwb|xn--vhquv|xn--vuq861b|xn--w4r85el8fhu5dnra|xn--w4rs40l|xn--wgbh1c|xn--wgbl6a|xn--xhq521b|xn--xkc2al3hye2a|xn--xkc2dl3a5ee0h|xn--y9a3aq|xn--yfro4i67o|xn--ygbi2ammx|xn--zfr164b|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|you|youtube|yt|yun|za|zappos|zara|zero|zip|zippo|zm|zone|zuerich|zw'.split('|'); // macro, see gulpfile.js\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar NUMBERS = '0123456789'.split('');\nvar ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nvar WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\xA0', '\\u1680', '\\u180E']; // excluding line breaks\n\nvar domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.CharacterState(tokenClass);\n};\n\n// Frequently used states\nvar S_START = makeState();\nvar S_NUM = makeState(_text.NUM);\nvar S_DOMAIN = makeState(_text.DOMAIN);\nvar S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\nvar S_WS = makeState(_text.WS);\n\n// States for special URL symbols\nS_START.on('@', makeState(_text.AT)).on('.', makeState(_text.DOT)).on('+', makeState(_text.PLUS)).on('#', makeState(_text.POUND)).on('?', makeState(_text.QUERY)).on('/', makeState(_text.SLASH)).on('_', makeState(_text.UNDERSCORE)).on(':', makeState(_text.COLON)).on('{', makeState(_text.OPENBRACE)).on('[', makeState(_text.OPENBRACKET)).on('<', makeState(_text.OPENANGLEBRACKET)).on('(', makeState(_text.OPENPAREN)).on('}', makeState(_text.CLOSEBRACE)).on(']', makeState(_text.CLOSEBRACKET)).on('>', makeState(_text.CLOSEANGLEBRACKET)).on(')', makeState(_text.CLOSEPAREN)).on('&', makeState(_text.AMPERSAND)).on([',', ';', '!', '\"', '\\''], makeState(_text.PUNCTUATION));\n\n// Whitespace jumps\n// Tokens of only non-newline whitespace are arbitrarily long\nS_START.on('\\n', makeState(_text.NL)).on(WHITESPACE, S_WS);\n\n// If any whitespace except newline, more whitespace!\nS_WS.on(WHITESPACE, S_WS);\n\n// Generates states for top-level domains\n// Note that this is most accurate when tlds are in alphabetical order\nfor (var i = 0; i < tlds.length; i++) {\n\tvar newStates = (0, _state.stateify)(tlds[i], S_START, _text.TLD, _text.DOMAIN);\n\tdomainStates.push.apply(domainStates, newStates);\n}\n\n// Collect the states generated by different protocls\nvar partialProtocolFileStates = (0, _state.stateify)('file', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolFtpStates = (0, _state.stateify)('ftp', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolHttpStates = (0, _state.stateify)('http', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolMailtoStates = (0, _state.stateify)('mailto', S_START, _text.DOMAIN, _text.DOMAIN);\n\n// Add the states to the array of DOMAINeric states\ndomainStates.push.apply(domainStates, partialProtocolFileStates);\ndomainStates.push.apply(domainStates, partialProtocolFtpStates);\ndomainStates.push.apply(domainStates, partialProtocolHttpStates);\ndomainStates.push.apply(domainStates, partialProtocolMailtoStates);\n\n// Protocol states\nvar S_PROTOCOL_FILE = partialProtocolFileStates.pop();\nvar S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\nvar S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\nvar S_MAILTO = partialProtocolMailtoStates.pop();\nvar S_PROTOCOL_SECURE = makeState(_text.DOMAIN);\nvar S_FULL_PROTOCOL = makeState(_text.PROTOCOL); // Full protocol ends with COLON\nvar S_FULL_MAILTO = makeState(_text.MAILTO); // Mailto ends with COLON\n\n// Secure protocols (end with 's')\nS_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\nS_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\ndomainStates.push(S_PROTOCOL_SECURE);\n\n// Become protocol tokens after a COLON\nS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\nS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\nS_MAILTO.on(':', S_FULL_MAILTO);\n\n// Localhost\nvar partialLocalhostStates = (0, _state.stateify)('localhost', S_START, _text.LOCALHOST, _text.DOMAIN);\ndomainStates.push.apply(domainStates, partialLocalhostStates);\n\n// Everything else\n// DOMAINs make more DOMAINs\n// Number and character transitions\nS_START.on(NUMBERS, S_NUM);\nS_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\nS_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\n// All the generated states should have a jump to DOMAIN\nfor (var _i = 0; _i < domainStates.length; _i++) {\n\tdomainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n}\n\nS_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);\n\n// Set default transition\nS_START.defaultTransition = makeState(_text.SYM);\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {String} str Input string to scan\n\t@return {Array} Array of TOKEN instances\n*/\nvar run = function run(str) {\n\n\t// The state machine only looks at lowercase strings.\n\t// This selective `toLowerCase` is used because lowercasing the entire\n\t// string causes the length and character position to vary in some in some\n\t// non-English strings. This happens only on V8-based runtimes.\n\tvar lowerStr = str.replace(/[A-Z]/g, function (c) {\n\t\treturn c.toLowerCase();\n\t});\n\tvar len = str.length;\n\tvar tokens = []; // return value\n\n\tvar cursor = 0;\n\n\t// Tokenize the string\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar nextState = null;\n\t\tvar tokenLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\ttokenLength++;\n\t\t\tcursor++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\t\t\tcontinue;\n\t\t} // Should never happen\n\n\t\t// Roll back to the latest accepting state\n\t\tcursor -= sinceAccepts;\n\t\ttokenLength -= sinceAccepts;\n\n\t\t// Get the class for the new token\n\t\tvar TOKEN = latestAccepting.emit(); // Current token class\n\n\t\t// No more jumps, just make a new token\n\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t}\n\n\treturn tokens;\n};\n\nvar start = S_START;\nexports.State = _state.CharacterState;\nexports.TOKENS = TOKENS;\nexports.run = run;\nexports.start = start;","'use strict';\n\nexports.__esModule = true;\nexports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\nvar _text = require('./text');\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n// Is the given token a valid domain token?\n// Should nums be included here?\nfunction isDomainToken(token) {\n\treturn token instanceof _text.DOMAIN || token instanceof _text.TLD;\n}\n\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@abstract\n*/\nvar MultiToken = (0, _createTokenClass.createTokenClass)();\n\nMultiToken.prototype = {\n\t/**\n \tString representing the type for this token\n \t@property type\n \t@default 'TOKEN'\n */\n\ttype: 'token',\n\n\t/**\n \tIs this multitoken a link?\n \t@property isLink\n \t@default false\n */\n\tisLink: false,\n\n\t/**\n \tReturn the string this token represents.\n \t@method toString\n \t@return {String}\n */\n\ttoString: function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.v.length; i++) {\n\t\t\tresult.push(this.v[i].toString());\n\t\t}\n\t\treturn result.join('');\n\t},\n\n\n\t/**\n \tWhat should the value for this token be in the `href` HTML attribute?\n \tReturns the `.toString` value by default.\n \t\t@method toHref\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\treturn this.toString();\n\t},\n\n\n\t/**\n \tReturns a hash of relevant values for this token, which includes keys\n \t* type - Kind of token ('url', 'email', etc.)\n \t* value - Original text\n \t* href - The value that should be added to the anchor tag's href\n \t\tattribute\n \t\t@method toObject\n \t@param {String} [protocol] `'http'` by default\n \t@return {Object}\n */\n\ttoObject: function toObject() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tvalue: this.toString(),\n\t\t\thref: this.toHref(protocol)\n\t\t};\n\t}\n};\n\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MAILTO\n\t@extends MultiToken\n*/\nvar MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true\n});\n\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class EMAIL\n\t@extends MultiToken\n*/\nvar EMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true,\n\ttoHref: function toHref() {\n\t\treturn 'mailto:' + this.toString();\n\t}\n});\n\n/**\n\tRepresents some plain text\n\t@class TEXT\n\t@extends MultiToken\n*/\nvar TEXT = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'text' });\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class NL\n\t@extends MultiToken\n*/\nvar NL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'nl' });\n\n/**\n\tRepresents a list of tokens making up a valid URL\n\t@class URL\n\t@extends MultiToken\n*/\nvar URL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'url',\n\tisLink: true,\n\n\t/**\n \tLowercases relevant parts of the domain and adds the protocol if\n \trequired. Note that this will not escape unsafe HTML characters in the\n \tURL.\n \t\t@method href\n \t@param {String} protocol\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\tvar hasProtocol = false;\n\t\tvar hasSlashSlash = false;\n\t\tvar tokens = this.v;\n\t\tvar result = [];\n\t\tvar i = 0;\n\n\t\t// Make the first part of the domain lowercase\n\t\t// Lowercase protocol\n\t\twhile (tokens[i] instanceof _text.PROTOCOL) {\n\t\t\thasProtocol = true;\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Skip slash-slash\n\t\twhile (tokens[i] instanceof _text.SLASH) {\n\t\t\thasSlashSlash = true;\n\t\t\tresult.push(tokens[i].toString());\n\t\t\ti++;\n\t\t}\n\n\t\t// Lowercase all other characters in the domain\n\t\twhile (isDomainToken(tokens[i])) {\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Leave all other characters as they were written\n\t\tfor (; i < tokens.length; i++) {\n\t\t\tresult.push(tokens[i].toString());\n\t\t}\n\n\t\tresult = result.join('');\n\n\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\tresult = protocol + '://' + result;\n\t\t}\n\n\t\treturn result;\n\t},\n\thasProtocol: function hasProtocol() {\n\t\treturn this.v[0] instanceof _text.PROTOCOL;\n\t}\n});\n\nexports.Base = MultiToken;\nexports.MAILTOEMAIL = MAILTOEMAIL;\nexports.EMAIL = EMAIL;\nexports.NL = NL;\nexports.TEXT = TEXT;\nexports.URL = URL;","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nvar _text = require('./tokens/text');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;","'use strict';\n\nexports.__esModule = true;\nexports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\nvar _class = require('./linkify/utils/class');\n\nvar _options = require('./linkify/utils/options');\n\nvar options = _interopRequireWildcard(_options);\n\nvar _scanner = require('./linkify/core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./linkify/core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\n/**\n\tConverts a string into tokens that represent linkable and non-linkable bits\n\t@method tokenize\n\t@param {String} str\n\t@return {Array} tokens\n*/\nvar tokenize = function tokenize(str) {\n\treturn parser.run(scanner.run(str));\n};\n\n/**\n\tReturns a list of linkable items in the given string.\n*/\nvar find = function find(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\tvar filtered = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\tfiltered.push(token.toObject());\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\n/**\n\tIs the given string valid linkable text of some sort\n\tNote that this does not trim the text for you.\n\n\tOptionally pass in a second `type` param, which is the type of link to test\n\tfor.\n\n\tFor example,\n\n\t\ttest(str, 'email');\n\n\tWill return `true` if str is a valid email.\n*/\nvar test = function test(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n};\n\n// Scanner and parser provide states and tokens for the lexicographic stage\n// (will be used to add additional link types)\nexports.find = find;\nexports.inherits = _class.inherits;\nexports.options = options;\nexports.parser = parser;\nexports.scanner = scanner;\nexports.test = test;\nexports.tokenize = tokenize;","module.exports = require('./lib/linkify');\n","'use strict';\n\nexports.__esModule = true;\n\nvar _linkify = require('./linkify');\n\nvar linkify = _interopRequireWildcard(_linkify);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tokenize = linkify.tokenize,\n    options = linkify.options; /**\n                               \tConvert strings of text into linkable HTML text\n                               */\n\nvar Options = options.Options;\n\n\nfunction escapeText(text) {\n\treturn text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nfunction escapeAttr(href) {\n\treturn href.replace(/\"/g, '&quot;');\n}\n\nfunction attributesToString(attributes) {\n\tif (!attributes) {\n\t\treturn '';\n\t}\n\tvar result = [];\n\n\tfor (var attr in attributes) {\n\t\tvar val = attributes[attr] + '';\n\t\tresult.push(attr + '=\"' + escapeAttr(val) + '\"');\n\t}\n\treturn result.join(' ');\n}\n\nfunction linkifyStr(str) {\n\tvar opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\topts = new Options(opts);\n\n\tvar tokens = tokenize(str);\n\tvar result = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\n\t\tif (token.type === 'nl' && opts.nl2br) {\n\t\t\tresult.push('<br>\\n');\n\t\t\tcontinue;\n\t\t} else if (!token.isLink || !opts.check(token)) {\n\t\t\tresult.push(escapeText(token.toString()));\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar _opts$resolve = opts.resolve(token),\n\t\t    formatted = _opts$resolve.formatted,\n\t\t    formattedHref = _opts$resolve.formattedHref,\n\t\t    tagName = _opts$resolve.tagName,\n\t\t    className = _opts$resolve.className,\n\t\t    target = _opts$resolve.target,\n\t\t    attributes = _opts$resolve.attributes;\n\n\t\tvar link = '<' + tagName + ' href=\"' + escapeAttr(formattedHref) + '\"';\n\n\t\tif (className) {\n\t\t\tlink += ' class=\"' + escapeAttr(className) + '\"';\n\t\t}\n\n\t\tif (target) {\n\t\t\tlink += ' target=\"' + escapeAttr(target) + '\"';\n\t\t}\n\n\t\tif (attributes) {\n\t\t\tlink += ' ' + attributesToString(attributes);\n\t\t}\n\n\t\tlink += '>' + escapeText(formatted) + '</' + tagName + '>';\n\t\tresult.push(link);\n\t}\n\n\treturn result.join('');\n}\n\nif (!String.prototype.linkify) {\n\ttry {\n\t\tObject.defineProperty(String.prototype, 'linkify', {\n\t\t\tset: function set() {},\n\t\t\tget: function get() {\n\t\t\t\treturn function linkify(opts) {\n\t\t\t\t\treturn linkifyStr(this, opts);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\t// IE 8 doesn't like Object.defineProperty on non-DOM objects\n\t\tif (!String.prototype.linkify) {\n\t\t\tString.prototype.linkify = function (opts) {\n\t\t\t\treturn linkifyStr(this, opts);\n\t\t\t};\n\t\t}\n\t}\n}\n\nexports.default = linkifyStr;","module.exports = require('./lib/linkify-string').default;\n","import linkify from 'linkifyjs';\nimport linkifyStr from 'linkifyjs/string';\n\nvar mqttc;\n\n// generate an uuid\nfunction uuidv4() {\n\treturn ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t);\n}\n\nexport default class ARENAChat {\n\n\tconstructor(st) {\n\t\t// handle default this.settings\n\t\tst = st || {};\n\t\tthis.settings = {\n\t\t\tuserid: st.userid !== undefined ? st.userid : uuidv4(),\n\t\t\tcameraid: st.cameraid !== undefined ? st.cameraid : \"camera_auser\",\n\t\t\tusername: st.username !== undefined ? st.username : \"chat-dft-username\",\n\t\t\trealm: st.realm !== undefined ? st.realm : \"realm\",\n\t\t\tscene: st.scene !== undefined ? st.scene : \"render\",\n\t\t\tpersist_uri: st.persist_uri !== undefined ? st.persist_uri : location.protocol + '//' + location.hostname+(location.port ? \":\"+location.port : \"\") + \"/persist/\",\n\t\t\tkeepalive_interval_ms: st.keepalive_interval_ms !== undefined ? st.keepalive_interval_ms : 30000,\n\t\t\tmqtt_host: st.mqtt_host !== undefined ? st.mqtt_host : \"wss://\" + location.hostname+(location.port ? \":\"+location.port : \"\") + \"/mqtt/\",\n\t\t\tmqtt_username: st.mqtt_username !== undefined ? st.mqtt_username : \"non_auth\",\n\t\t\tmqtt_token: st.mqtt_token !== undefined ? st.mqtt_token : null,\n\t\t}\n\n\t\t// users list\n\t\tthis.liveUsers = [];\n\n\t\t// cleanup userlist periodically\n\t\tsetInterval(this.userCleanup.bind(this), this.settings.keepalive_interval_ms * 3);\n\n\t\t/*\n\t    Clients listen for chat messages on:\n\t\t\t\t- global public (*o*pen) topic (gtopic; realm/g/c/o/#)\n\t\t\t\t- a user (*p*rivate) topic (utopic; realm/g/c/p/userid/#)\n\t\t\tClients write always to a topic with its own userid:\n  \t\t\t - a topic for each user for private messages (ugtopic; realm/g/c/p/[other-userid]/userid)\n\t\t\t\t - a global topic (ugtopic; realm/g/c/o/userid);\n\n\t\t\tNote: topic must always end with userid and match from_uid in the message (check on client at receive, and/or on publish at pubsub server)\n\t\t\tNote: scene-only messages are sent to public topic and filtered at the client\n\n\t\t\tSummary of topics/permissions:\n\t\t\t subscribePrivateTopic  - receive private messages (realm/g/c/p/userid/#): Read\n\t\t\t subscribePublicTopic  - receive open messages to everyone and/or scene (realm/g/c/o/#): Read\n\t\t\t publishPrivateTopic - send private messages to a user (realm/g/c/p/[regex-matching-any-userid]/userid): Write\n\t\t\t publishPublicTopic - send open messages (chat keepalive, messages to all/scene) (realm/g/c/o/userid): Write\n\t\t*/\n\n\t\t// receive private messages  (subscribe only)\n\t\tthis.settings.subscribePrivateTopic = this.settings.realm + \"/g/c/p/\" + this.settings.userid + \"/#\";\n\n\t\t// receive open messages to everyone and/or scene (subscribe only)\n\t\tthis.settings.subscribePublicTopic = this.settings.realm + \"/g/c/o/#\";\n\n\t\t// send private messages to a user (publish only)\n\t\tthis.settings.publishPrivateTopic = this.settings.realm + \"/g/c/p/{to_uid}/\" + this.settings.userid;\n\n\t\t// send open messages (chat keepalive, messages to all/scene) (publish only)\n\t\tthis.settings.publishPublicTopic = this.settings.realm + \"/g/c/o/\" + this.settings.userid;\n\n\t\t// counter for unread msgs\n\t\tthis.unreadMsgs = 0;\n\n\t\tthis.alertBox = document.createElement(\"div\");\n\t\tthis.alertBox.className = \"chat-alert-box\";\n\t\tthis.alertBox.innerHTML= \"\";\n\t\tdocument.body.appendChild(this.alertBox);\n\n\t\tlet btnGroup = document.createElement(\"div\");\n\t\tbtnGroup.className = \"chat-button-group\";\n\t\tdocument.body.appendChild(btnGroup);\n\n\t\tthis.chatBtn = document.createElement(\"button\");\n\t\tthis.chatBtn.className = \"chat-button\";\n\t\tthis.chatBtn.setAttribute(\"title\", \"Chat\");\n\t\tbtnGroup.appendChild(this.chatBtn);\n\n\t\tthis.usersBtn = document.createElement(\"button\");\n\t\tthis.usersBtn.className = \"users-button\";\n\t\tthis.usersBtn.setAttribute(\"title\", \"User List\");\n\t\tbtnGroup.appendChild(this.usersBtn);\n\n\t\tthis.lmBtn = document.createElement(\"button\");\n\t\tthis.lmBtn.className = \"landmarks-button\";\n\t\tbtnGroup.appendChild(this.lmBtn);\n\n\t\tthis.chatDot = document.createElement(\"span\");\n\t\tthis.chatDot.className = \"dot\";\n\t\tthis.chatDot.innerHTML = \"0\";\n\t\tthis.chatBtn.appendChild(this.chatDot);\n\n\t\t// chat\n\t\tthis.chatPopup = document.createElement(\"div\");\n\t\tthis.chatPopup.className = \"chat-popup\";\n\t\tthis.chatPopup.style.display = 'none';\n\t\tdocument.body.appendChild(this.chatPopup);\n\n\t\tthis.closeChatBtn = document.createElement(\"span\");\n\t\tthis.closeChatBtn.className = \"close\";\n\t\tthis.closeChatBtn.innerHTML = \"×\";\n\t\tthis.chatPopup.appendChild(this.closeChatBtn);\n\n\t\tthis.msgList = document.createElement(\"div\");\n\t\tthis.msgList.className = \"message-list\";\n\t\tthis.chatPopup.appendChild(this.msgList);\n\n\t\tlet formDiv = document.createElement(\"div\");\n\t\tformDiv.className = \"form-container\";\n\t\tthis.chatPopup.appendChild(formDiv);\n\n\t\tthis.msgTxt = document.createElement(\"textarea\");\n\t\tthis.msgTxt.setAttribute(\"rows\", \"1\");\n\t\tthis.msgTxt.setAttribute(\"placeholder\", \"Type message..\");\n\t\tformDiv.appendChild(this.msgTxt);\n\n\t\tthis.toSel = document.createElement(\"select\");\n\t\tthis.toSel.className = \"sel\";\n\t\tformDiv.appendChild(this.toSel);\n\n\t\tthis.addToSelOptions();\n\n\t\tthis.msgBtn = document.createElement(\"button\");\n\t\tthis.msgBtn.className = \"btn\";\n\t\tformDiv.appendChild(this.msgBtn);\n\n\t\t// users\n\t\tthis.usersPopup = document.createElement(\"div\");\n\t\tthis.usersPopup.className = \"users-popup\";\n\t\tdocument.body.appendChild(this.usersPopup);\n\n\t\tthis.closeUsersBtn = document.createElement(\"span\");\n\t\tthis.closeUsersBtn.className = \"close\";\n\t\tthis.closeUsersBtn.innerHTML = \"×\";\n\t\tthis.usersPopup.appendChild(this.closeUsersBtn);\n\n\t\tlet muteAllDiv = document.createElement(\"div\");\n\t\tmuteAllDiv.className = \"mute-all\";\n\t\tthis.usersPopup.appendChild(muteAllDiv);\n\n\t\tthis.silenceAllBtn = document.createElement(\"span\");\n\t\tthis.silenceAllBtn.className = \"users-list-btn ma\";\n\t\tthis.silenceAllBtn.title = \"Silence (Mute Everyone)\";\n\t\tmuteAllDiv.appendChild(this.silenceAllBtn);\n\n\t\tlet label = document.createElement(\"span\");\n\t\tlabel.innerHTML = \"<br/><br/>&nbsp\";\n\t\tlabel.style.fontSize = \"small\";\n\t\tthis.usersPopup.appendChild(label);\n\n\t\tthis.nUserslabel = document.createElement(\"span\");\n\t\tthis.nUserslabel.style.fontSize = \"small\";\n\t\tthis.usersPopup.appendChild(this.nUserslabel);\n\n\t\tlabel = document.createElement(\"span\");\n\t\tlabel.innerHTML = \" Users (buttons allow to find and mute users):\";\n\t\tlabel.style.fontSize = \"small\";\n\t\tthis.usersPopup.appendChild(label);\n\n\t\tlet userDiv = document.createElement(\"div\");\n\t\tuserDiv.className = \"user-list\";\n\t\tthis.usersPopup.appendChild(userDiv);\n\n\t\tthis.usersList = document.createElement(\"ul\");\n\t\tuserDiv.appendChild(this.usersList);\n\n\t\t// landmarks\n\t\tthis.lmPopup = document.createElement(\"div\");\n\t\tthis.lmPopup.className = \"users-popup\";\n\t\tdocument.body.appendChild(this.lmPopup);\n\n\t\tthis.closeLmBtn = document.createElement(\"span\");\n\t\tthis.closeLmBtn.className = \"close\";\n\t\tthis.closeLmBtn.innerHTML = \"&times\";\n\t\tthis.lmPopup.appendChild(this.closeLmBtn);\n\n\t\tlabel = document.createElement(\"span\");\n\t\tlabel.innerHTML = \"<br/><br/>&nbspLandmarks (buttons allow to find landmarks):\";\n\t\tlabel.style.fontSize = \"small\";\n\t\tthis.lmPopup.appendChild(label);\n\n\t\tlet lmDiv = document.createElement(\"div\");\n\t\tlmDiv.className = \"user-list\";\n\t\tthis.lmPopup.appendChild(lmDiv);\n\n\t\tthis.lmList = document.createElement(\"ul\");\n\t\tlmDiv.appendChild(this.lmList);\n\n\t\tvar _this = this;\n\n\t\tthis.displayAlert(\"Not sending audio or video. Use icons on the right to start.\", 5000);\n\n\t\tthis.chatBtn.onclick = function () {\n\t\t\t_this.chatPopup.style.display = 'block';\n\t\t\t_this.usersPopup.style.display = 'none';\n\t\t\t_this.chatDot.style.display = 'none';\n\t\t\t_this.lmPopup.style.display = 'none';\n\t\t\tthis.unreadMsgs = 0;\n\n\t\t\t// scroll to bottom\n\t\t\t_this.msgList.scrollTop = _this.msgList.scrollHeight;\n\n\t\t\t// focus on textbox\n\t\t\t_this.msgTxt.focus();\n\n\t\t\t// re-establish connection, in case client disconnected\n\t\t\t_this.connect();\n\t\t}\n\n\t\tthis.usersBtn.onclick = function () {\n\t\t\t_this.chatPopup.style.display = 'none';\n\t\t\t_this.usersPopup.style.display = 'block';\n\t\t\t_this.lmPopup.style.display = 'none';\n\t\t\t_this.populateUserList();\n\t\t}\n\n\t\tthis.closeChatBtn.onclick = function () {\n\t\t\t_this.chatPopup.style.display = 'none';\n\t\t}\n\n\t\tthis.closeUsersBtn.onclick = function () {\n\t\t\t_this.usersPopup.style.display = 'none';\n\t\t}\n\n\t\tthis.msgBtn.onclick = function () {\n\t\t\tif (_this.msgTxt.value.length > 0) _this.sendMsg(_this.msgTxt.value);\n\t\t\t_this.msgTxt.value = \"\";\n\t\t}\n\n\t\tthis.lmBtn.onclick = function() {\n\t\t\t_this.chatPopup.style.display = 'none';\n\t\t\t_this.usersPopup.style.display = 'none';\n\t\t\t_this.lmPopup.style.display = 'block';\n\t\t}\n\n\t\tthis.closeLmBtn.onclick = function() {\n\t\t  _this.lmPopup.style.display = 'none';\n\t\t}\n\n\t\tthis.msgTxt.addEventListener(\"keyup\", function (event) {\n\t\t\tevent.preventDefault();\n\t\t\tif (event.keyCode === 13) {\n\t\t\t\tif (_this.msgTxt.value.length > 1) _this.sendMsg(_this.msgTxt.value);\n\t\t\t\t_this.msgTxt.value = \"\";\n\t\t\t}\n\t\t});\n\n\t\t// send sound on/off msg to all\n  \tthis.silenceAllBtn.onclick = function () {\n\t\t\tif (!_this.isUserAuthenticated(_this.settings.cameraid)) {\n\t\t\t\t\t\t\t_this.displayAlert(\"Anonymous users may not mute others.\", 3000);\n\t\t\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswal({\n\t\t\t  title: \"Are you sure?\",\n\t\t\t  text: \"This will send a mute request to all users.\",\n\t\t\t  icon: \"warning\",\n\t\t\t  buttons: true,\n\t\t\t  dangerMode: true,\n\t\t\t})\n\t\t\t.then((sendMute) => {\n\t\t\t  if (sendMute) {\n\t\t\t\t\t// send to all scene topic\n\t\t  \t\t_this.ctrlMsg(\"scene\", \"sound:off\");\n\t\t\t  }\n\t\t\t});\n  \t}\n\n\t\tconst moveToCamera = localStorage.getItem('moveToFrontOfCamera');\n\t\t//console.log(moveToCamera);\n\t\tif (moveToCamera !== null) {\n\t\t\tlocalStorage.removeItem('moveToFrontOfCamera');\n\t\t\tthis.moveToFrontOfCamera(moveToCamera, this.settings.scene);\n\t\t}\n\n\t\twindow.addEventListener('newsettings', e => {\n\t\t\t_this.settings.username = e.detail.name;\n\t\t\t_this.keepalive(); // let other users know\n\t\t\t_this.populateUserList();\n\t\t});\n\t}\n\n\t// perform some async startup tasks\n  async start(force = false) {\n\t\t// connect mqtt\n\t\tthis.connect();\n\n\t\t// populate landmark list\n\t\tthis.populateLandmarkList();\n\t}\n\n  getUserList() {\n\t\treturn this.liveUsers;\n\t}\n\n\tasync connect(force = false) {\n\t\tif (this.connected == true && force == false) return;\n\t\tthis.mqttc = new Paho.Client(this.settings.mqtt_host, \"chat-\" + this.settings.userid);\n\n\t\tvar _this = this;\n\t\tlet msg = {\n\t\t\tobject_id: uuidv4(),\n\t\t\ttype: \"chat-ctrl\",\n\t\t\tto_uid: \"all\",\n\t\t\tfrom_uid: this.settings.userid,\n\t\t\tfrom_un: this.settings.username,\n\t\t\tfrom_scene: this.settings.scene,\n\t\t\ttext: \"left\"\n\t\t}\n\t\tlet willMessage = new Paho.Message(JSON.stringify(msg));\n\t\tif (this.settings.subscribePublicTopic.slice(-1) == \"#\") willMessage.destinationName = this.settings.subscribePublicTopic.slice(0, -1); // remove final '#'\n\t\telse willMessage.destinationName = this.settings.subscribePublicTopic;\n\t\tthis.mqttc.connect({\n\t\t\tonSuccess: () => {\n\t\t\t\tconsole.info(\"Chat connected. Subscribing to:\", this.settings.subscribePublicTopic, this.settings.subscribePrivateTopic);\n\t\t\t\tthis.mqttc.subscribe(this.settings.subscribePublicTopic);\n\t\t\t\tthis.mqttc.subscribe(this.settings.subscribePrivateTopic);\n\n\t\t\t\tthis.mqttc.onConnectionLost = this.onConnectionLost.bind(_this);\n\t\t\t\tthis.mqttc.onMessageArrived = this.onMessageArrived.bind(_this);\n\n\t\t\t\t// say hello to everyone\n\t\t\t\tthis.keepalive(false);\n\n\t\t\t\t// periodically send a keep alive\n\t\t\t\tif (this.keepaliveInterval != undefined) clearInterval(this.keepaliveInterval);\n\t\t\t\tthis.keepaliveInterval = setInterval(function () {\n\t\t\t\t\t\t_this.keepalive(true);\n\t\t\t\t}, this.settings.keepalive_interval_ms);\n\n\t\t\t\tthis.connected = true;\n\t\t\t},\n\t\t\tonFailure: () => {\n\t\t\t\tconsole.error(\"Chat failed to connect.\");\n\t\t\t\tthis.connected = false;\n\t\t\t},\n\t\t\twillMessage: willMessage,\n\t\t\tuserName: this.settings.mqtt_username,\n\t\t\tpassword: this.settings.mqtt_token\n\t\t});\n\t}\n\n\tonConnectionLost(message) {\n\t\tconsole.error(\"Chat disconnect.\");\n\t\tthis.connected = false;\n\t}\n\n\tisUserAuthenticated(cameraId) {\n\t\treturn !cameraId.includes(\"anonymous\")\n\t}\n\n\tsendMsg(msgTxt) {\n\t\tlet msg = {\n\t\t\tobject_id: uuidv4(),\n\t\t\ttype: \"chat\",\n\t\t\tto_uid: this.toSel.value,\n\t\t\tfrom_uid: this.settings.userid,\n\t\t\tfrom_un: decodeURI(this.settings.username),\n\t\t\tfrom_scene: this.settings.scene,\n\t\t\tfrom_desc: decodeURI(this.settings.username) + \" (\" + this.toSel.options[this.toSel.selectedIndex].text + \") \" + new Date().toLocaleTimeString(),\n\t\t\tcameraid: this.settings.cameraid,\n\t\t\ttext: msgTxt\n\t\t}\n\t\tlet dstTopic = (this.toSel.value == \"scene\" || this.toSel.value == \"all\") ? this.settings.publishPublicTopic : this.settings.publishPrivateTopic.replace(\"{to_uid}\", this.toSel.value);\n\t\t//console.log(\"sending\", msg, \"to\", dstTopic);\n\t\tthis.mqttc.send(dstTopic, JSON.stringify(msg), 0, false);\n\t\tthis.txtAddMsg(msg.text, msg.from_desc, \"self\");\n\t}\n\n\tonMessageArrived(mqttMsg) {\n\t\t//console.log(\"Received:\", mqttMsg);\n\t\tlet msg;\n\t\ttry {\n\t\t\tmsg = JSON.parse(mqttMsg.payloadString);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Error parsing chat msg.\");\n\t\t\treturn;\n\t\t}\n\n    // ignore invalid and our own messages\n\t\tif (msg.from_uid == undefined) return;\n\t\tif (msg.to_uid == undefined) return;\n\t\tif (msg.from_uid == this.settings.userid) return;\n\n\t\t// ignore spoofed messages\n\t\tmqttMsg.destinationName.endsWith(msg.from_uid);\n\n\t\t// save user data and timestamp\n\t\tif (this.liveUsers[msg.from_uid] == undefined && msg.from_un !== undefined && msg.from_scene !== undefined) {\n\t\t\tthis.liveUsers[msg.from_uid] = {\n\t\t\t\tun: msg.from_un,\n\t\t\t\tscene: msg.from_scene,\n\t\t\t\tcid: msg.cameraid,\n\t\t\t\tts: new Date().getTime()\n\t\t\t};\n\t\t\tthis.populateUserList();\n\t\t\tthis.keepalive(); // let this user know about us\n\t\t} else if (msg.from_un !== undefined && msg.from_scene !== undefined) {\n\t\t\tthis.liveUsers[msg.from_uid].un = msg.from_un;\n\t\t\tthis.liveUsers[msg.from_uid].scene = msg.from_scene;\n\t\t\tthis.liveUsers[msg.from_uid].cid = msg.cameraid;\n\t\t\tthis.liveUsers[msg.from_uid].ts = new Date().getTime();\n\t\t\tif (msg.text) {\n\t\t\t\tif (msg.text == \"left\") {\n\t\t\t\t\tdelete this.liveUsers[msg.from_uid];\n\t\t\t\t\tthis.populateUserList();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// process commands\n\t\tif (msg.type == \"chat-ctrl\") {\n\t\t\tif (msg.text == \"sound:off\") {\n        //console.log(\"muteAudio\");\n\t\t\t\tlet abtn = document.getElementById('btn-audio-off');\n\t\t\t\tif (abtn == undefined) {\n\t\t\t\t\tconsole.error(\"Could not find audio button\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (abtn.style.backgroundImage.includes('audio-on.png') == true) {\n\t\t\t\t\tabtn.click();\n\t\t\t\t\tthis.displayAlert(\"Sound muted. Requested by \" + msg.from_un + \".\", 3000);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// only proceed for chat messages sent to us or to all\n\t\tif (msg.type !== \"chat\") return;\n\t\tif (msg.to_uid !== this.settings.userid && msg.to_uid !== \"all\" && msg.to_uid !== \"scene\") return;\n\n\t\t// drop messages to scenes different from our scene\n\t\tif (msg.to_uid === \"scene\" && msg.from_scene != this.settings.scene) return\n\n\t\tthis.txtAddMsg(msg.text, msg.from_desc, \"other\");\n\n\t\tthis.unreadMsgs++;\n\t\tthis.chatDot.innerHTML = (this.unreadMsgs < 100) ? this.unreadMsgs : \"...\";\n\n\t\t// check if chat is visible\n\t\tif (this.chatPopup.style.display == \"none\") {\n\t\t\tthis.chatDot.style.display = 'block';\n\t\t}\n\t}\n\n\ttxtAddMsg(msg, status, whoClass) {\n\t\tlet statusSpan = document.createElement(\"span\");\n\t\tstatusSpan.className = \"status \" + whoClass // \"self\" | \"other\"\n\t\tstatusSpan.innerHTML = status;\n\t\tthis.msgList.appendChild(statusSpan);\n\n\t\tlet msgSpan = document.createElement(\"span\");\n\t\tmsgSpan.className = \"msg \" + whoClass // \"self\" | \"other\"\n\t\tlet host = window.location.host.replace(\".\", \"\\\\.\");\n\t\tlet pattern = `${host}(.*scene=.*|\\\\/\\n|\\\\/$)`;\n\t\tlet regex = new RegExp(pattern);\n\n\t\tif (msg.match(regex) != null) {\n\t\t\t// no new tab if we have a link to an arena scene\n\t\t\tmsg = msg.linkify({\n\t\t\t\ttarget: \"_parent\"\n\t\t\t});\n\t\t} else {\n\t\t\tmsg = msg.linkify({\n\t\t\t\ttarget: \"_blank\"\n\t\t\t});\n\t\t}\n\t\tmsgSpan.innerHTML = msg;\n\t\tthis.msgList.appendChild(msgSpan);\n\n\t\t// scroll to bottom\n\t\tthis.msgList.scrollTop = this.msgList.scrollHeight;\n\t}\n\n  populateUserList() {\n  \tthis.usersList.innerHTML = \"\";\n  \tlet selVal = this.toSel.value;\n  \tthis.toSel.innerHTML = \"\";\n  \tthis.addToSelOptions();\n\n  \tthis.nUserslabel.innerHTML = Object.keys(this.liveUsers).length;\n\n  \tlet _this = this;\n  \tlet userList = []\n  \tObject.keys(this.liveUsers).forEach(function (key) {\n  \t\tuserList.push({\n  \t\t\tuid: key,\n  \t\t\tsort_key: (_this.liveUsers[key].scene == _this.settings.scene) ? \"aaa\" : \"zzz\",\n  \t\t\tscene: _this.liveUsers[key].scene,\n  \t\t\tun: _this.liveUsers[key].un,\n  \t\t\tcid: _this.liveUsers[key].cid\n  \t\t});\n  \t});\n\n  \tuserList.sort((a, b) => ('' + a.sort_key + a.scene + a.un).localeCompare(b.sort_key + b.scene + b.un));\n\n  \t// list users\n  \tuserList.forEach(user => {\n  \t\tlet uli = document.createElement(\"li\");\n\n  \t\tuli.innerHTML = user.scene + \"/\" + decodeURI(user.un);\n\n  \t\tlet uBtnCtnr = document.createElement(\"div\");\n  \t\tuBtnCtnr.className = \"users-list-btn-ctnr\";\n  \t\tuli.appendChild(uBtnCtnr);\n\n  \t\tlet fuspan = document.createElement(\"span\");\n  \t\tfuspan.className = \"users-list-btn fu\";\n  \t\tfuspan.title = \"Find User\";\n  \t\tuBtnCtnr.appendChild(fuspan);\n\n  \t\t// span click event (move us to be in front of another clicked user)\n  \t\tlet cid = user.cid;\n  \t\tlet scene = user.scene;\n  \t\tfuspan.onclick = function () {\n  \t\t\t_this.moveToFrontOfCamera(cid, scene);\n  \t\t}\n\n\t\t\tif (user.scene == _this.settings.scene) {\n\t  \t\tlet sspan = document.createElement(\"span\");\n\t  \t\tsspan.className = \"users-list-btn s\";\n\t  \t\tsspan.title = \"Mute User\";\n\t  \t\tuBtnCtnr.appendChild(sspan);\n\n\t  \t\t// span click event (send sound on/off msg to ussr)\n\t  \t\tsspan.onclick = function () {\n\t\t\t\t\tif (!_this.isUserAuthenticated(_this.settings.cameraid)) {\n\t\t\t\t\t\t\t\t\t_this.displayAlert(\"Anonymous users may not mute others.\", 3000);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t  \t\t\t// message to target user\n\t  \t\t\t_this.ctrlMsg(user.uid, \"sound:off\");\n\t  \t\t}\n\t\t\t}\n  \t\tlet op = document.createElement(\"option\");\n  \t\top.value = user.uid;\n  \t\top.innerHTML = \"to: \" + decodeURI(user.un) + ((user.scene != _this.settings.scene) ? \" (\"+user.scene+\")\":\"\");\n  \t\t_this.toSel.appendChild(op);\n  \t\t_this.usersList.appendChild(uli);\n  \t});\n  \tthis.toSel.value = selVal; // preserve selected value\n  }\n\n\tasync populateLandmarkList() {\n\t\ttry {\n        let data = await fetch(this.settings.persist_uri + this.settings.scene + \"?type=landmarks\");\n        if (!data) {\n          console.error(\"Could not fetch landmarks from persist!\")\n          return;\n        }\n        if (!data.ok) {\n\t\t\t\t\tconsole.error(\"Could not fetch landmarks from persist!\")\n          return;\n        }\n        let persistRes = await data.json();\n\t\t\t\t// support multiple landmark list objects; merge all into a single array\n\t\t\t\tthis.landmarks = [];\n\t\t\t\tpersistRes.forEach(lmObj => {\n\t\t\t\t\tArray.prototype.push.apply(this.landmarks,lmObj.attributes.landmarks);\n\t\t\t\t});\n\n    } catch (err) {\n\t\t\t  console.error(\"Could not fetch landmarks from persist!\")\n        console.error(err);\n        return;\n    }\n\n\t\tif (this.landmarks.length == 0) {\n\t\t\tthis.lmBtn.style.display = \"none\"; // hide landmarks button\n\t\t\treturn;\n\t\t}\n\n\t\tlet _this = this;\n\t\tthis.landmarks.forEach(lm => {\n\t\t\tlet uli = document.createElement(\"li\");\n\t\t\tuli.innerHTML = (lm.label.length > 45) ?  lm.label.substring(0, 45) + \"...\": lm.label;\n\n\t\t\tlet lmBtnCtnr = document.createElement(\"div\");\n\t\t\tlmBtnCtnr.className=\"lm-list-btn-ctnr\";\n\t\t\tuli.appendChild(lmBtnCtnr);\n\n\t\t\tlet lspan = document.createElement(\"span\");\n\t\t\tlspan.className = \"lm-list-btn l\";\n\t\t\tlspan.title = \"Move to Landmark\";\n\t\t\tlmBtnCtnr.appendChild(lspan);\n\n\t\t\t// setup click event\n\t\t\tlspan.onclick = function() {\n\t\t\t\t_this.moveToLandmark(lm.object_id)\n\t\t\t}\n\n\t\t\t_this.lmList.appendChild(uli);\n\t\t});\n\t}\n\n\taddToSelOptions() {\n\t\tlet op = document.createElement(\"option\");\n\t\top.value = \"scene\";\n\t\top.innerHTML = \"to: scene \" + this.settings.scene;\n\t\tthis.toSel.appendChild(op);\n\n\t\top = document.createElement(\"option\");\n\t\top.value = \"all\";\n\t\top.innerHTML = \"to: all scenes\";\n\t\tthis.toSel.appendChild(op);\n\t}\n\n\tkeepalive(tryconnect = false) {\n\t\tthis.ctrlMsg(\"all\", \"keepalive\", tryconnect);\n\t}\n\n\tctrlMsg(to, text, tryconnect = false) {\n\t\t// re-establish connection, in case client disconnected\n\t\tif (tryconnect) this.connect();\n\n    let dstTopic;\n\t\tif (to === \"all\" || to === \"scene\") {\n\t\t\tdstTopic = this.settings.publishPublicTopic; // public messages\n\t\t} else {\n\t\t\t// replace '{to_uid}' for the 'to' value\n\t\t\tdstTopic = this.settings.publishPrivateTopic.replace(\"{to_uid}\", to);\n\t\t}\n\t\tlet msg = {\n\t\t\tobject_id: uuidv4(),\n\t\t\ttype: \"chat-ctrl\",\n\t\t\tto_uid: to,\n\t\t\tfrom_uid: this.settings.userid,\n\t\t\tfrom_un: this.settings.username,\n\t\t\tfrom_scene: this.settings.scene,\n\t\t\tcameraid: this.settings.cameraid,\n\t\t\ttext: text\n\t\t}\n\t\t//console.log(\"ctrl\", msg, \"to\", dstTopic);\n\t\tthis.mqttc.send(dstTopic, JSON.stringify(msg), 0, false);\n\t}\n\n\tuserCleanup() {\n\t\tlet now = new Date().getTime();\n\t\tlet _this = this;\n\t\tObject.keys(_this.liveUsers).forEach(function (key) {\n\t\t\tif (now - _this.liveUsers[key].ts > _this.settings.keepalive_interval_ms) {\n\t\t\t\tdelete _this.liveUsers[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tdisplayAlert(msg, timeMs) {\n\t  let alert = document.getElementById(\"alert\");\n\n\t  this.alertBox.innerHTML = msg;\n\t  this.alertBox.style.display = \"block\";\n\t  setTimeout(() => {\n\t      this.alertBox.style.display = \"none\";\n\t  }, timeMs); // clear message in timeMs milliseconds\n\t}\n\n\tmoveToLandmark(objectId) {\n\t\tlet sceneEl = document.querySelector('a-scene');\n\n\t\tif (!sceneEl) {\n\t\t\tconsole.error(\"Could not find aframe scene\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet landmarkObj = sceneEl.querySelector('[id=\"' + objectId + '\"]');\n\n\t\tlet myCamera = document.getElementById('my-camera');\n\n\t\tif (!myCamera) {\n\t\t\tconsole.error(\"Could not find our camera\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet direction = new THREE.Vector3();\n\t\tlandmarkObj.object3D.getWorldDirection(direction);\n\t\tlet distance = 3.5; // distance to put you\n\t\tlet pos = new THREE.Vector3();\n\t\tlandmarkObj.object3D.getWorldPosition(pos);\n\t\tmyCamera.object3D.position.copy(pos);\n\t\tmyCamera.object3D.position.add(direction.multiplyScalar(distance))\n\t\tmyCamera.object3D.position.y=1.6; // set at a fixed height\n\n\t\t// rotate our camera to face the object\n\t\tmyCamera.components['look-controls'].yawObject.rotation.y = Math.atan2((myCamera.object3D.position.x - pos.x), (myCamera.object3D.position.z - pos.z));\n\t}\n\n\tmoveToFrontOfCamera(cameraId, scene) {\n\t\t//console.log(\"Move to near camera:\", cameraId);\n\n\t\tif (scene !== this.settings.scene) {\n\t\t\tlocalStorage.setItem('moveToFrontOfCamera', cameraId);\n\t\t\tvar href = new URL(document.location.href);\n\t\t\thref.searchParams.set('scene', scene);\n\t\t\tdocument.location.href = href.toString();\n\t\t\treturn;\n\t\t}\n\n\t\tlet sceneEl = document.querySelector('a-scene');\n\t\tif (!sceneEl) {\n\t\t\tconsole.error(\"Could not find aframe scene\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet toCam = sceneEl.querySelector('[id=\"' + cameraId + '\"]');\n\n\t\tif (!toCam) {\n\t\t\t// TODO: find a better way to do this\n\t\t\t// when we jump to a scene, the \"to\" user needs to move for us to be able to find his camera\n\t\t\tconsole.error(\"Could not find destination user camera\", cameraId);\n\t\t\treturn;\n\t\t}\n\n\t\tlet myCamera = document.getElementById('my-camera');\n\n\t\tif (!myCamera) {\n\t\t\tconsole.error(\"Could not find our camera\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet direction = new THREE.Vector3();\n\t\ttoCam.object3D.getWorldDirection(direction);\n\t\tlet distance = 2; // distance to put you\n\t\tmyCamera.object3D.position.copy(toCam.object3D.position.clone()).add(direction.multiplyScalar(-distance));\n\t\tmyCamera.object3D.position.y = toCam.object3D.position.y;\n\t\t// rotate our camera to face the other user\n\t\tmyCamera.components['look-controls'].yawObject.rotation.y = Math.atan2((myCamera.object3D.position.x - toCam.object3D.position.x), (myCamera.object3D.position.z - toCam.object3D.position.z));\n\t}\n}\n","import ARENAChat from './arena-chat.js';\n\nvar arenaChat;\n\nARENA.Chat = {\n  init: async function init(chat_settings) {\n    console.log(\"Loading Chat\");\n    arenaChat = new ARENAChat({\n        userid: globals.idTag,\n        cameraid: globals.camName,\n        username: globals.displayName,\n        realm: defaults.realm,\n        scene: globals.scenenameParam,\n        persist_uri: \"https://\" + defaults.persistHost + defaults.persistPath,\n        keepalive_interval_ms: 30000,\n        mqtt_host: globals.mqttParam,\n        mqtt_username: globals.username,\n        mqtt_token: globals.mqttToken\n    });\n    arenaChat.start();\n  },\n  userList: function init(chat_settings) {\n    return arenaChat.getUserList();\n  }\n}\n"]}