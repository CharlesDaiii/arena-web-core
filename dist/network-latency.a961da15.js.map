{"version":3,"sources":["components/network-latency.js"],"names":["AFRAME","registerComponent","init","UPDATE_INTERVAL_MS","tick","utils","throttleTick","message","Paho","Message","destinationName","ARENA","latencyTopic","qos","t","dt","mqtt","isConnected","send"],"mappings":";AAMAA,OAAOC,kBAAkB,kBAAmB,CAExCC,KAAM,WACGC,KAAAA,mBAAqB,IACrBC,KAAAA,KAAOJ,OAAOK,MAAMC,aAAa,KAAKF,KAAM,KAAKD,mBAAoB,MACrEI,KAAAA,QAAU,IAAIC,KAAKC,QAAQ,IAC3BF,KAAAA,QAAQG,gBAAkBC,MAAMC,aAChCL,KAAAA,QAAQM,IAAM,GAEvBT,KAAO,SAASU,EAAGC,GACXJ,MAAMK,KAAKC,eACXN,MAAMK,KAAKE,KAAK,KAAKX","file":"network-latency.a961da15.js","sourceRoot":"../src","sourcesContent":["/* global AFRAME, ARENA, Paho */\n\n/**\n * Publish with qos of 2 for network graph to update latency\n *\n */\nAFRAME.registerComponent('network-latency', {\n    // publish empty message with qos of 2 for network graph to update latency\n    init: function() {\n        this.UPDATE_INTERVAL_MS = 10000; // updates every 10s\n        this.tick = AFRAME.utils.throttleTick(this.tick, this.UPDATE_INTERVAL_MS, this);\n        this.message = new Paho.Message(''); // send blank message\n        this.message.destinationName = ARENA.latencyTopic;\n        this.message.qos = 2;\n    },\n    tick: (function(t, dt) {\n        if (ARENA.mqtt.isConnected()) {\n            ARENA.mqtt.send(this.message);\n        }\n    }),\n});\n"]}