{"version":3,"sources":["components/ttl.js"],"names":["AFRAME","registerComponent","schema","seconds","type","init","now","Date","setSeconds","getSeconds","data","expireAt","tick","utils","throttleTick","update","oldData","el","parentNode","removeChild"],"mappings":";AAUAA,OAAOC,kBAAkB,MAAO,CAC5BC,OAAQ,CACJC,QAAS,CAACC,KAAM,WAEpBC,KAAM,WACIC,MAAAA,EAAM,IAAIC,KAChBD,EAAIE,WAAWF,EAAIG,aAAe,KAAKC,KAAKP,SACvCQ,KAAAA,SAAWL,EACXM,KAAAA,KAAOZ,OAAOa,MAAMC,aAAa,KAAKF,KAAM,IAAM,OAE3DG,OAAQ,SAASC,GACTA,GAAAA,EAAQb,UAAY,KAAKO,KAAKC,SAAU,CAClCL,MAAAA,EAAM,IAAIC,KAChBD,EAAIE,WAAWF,EAAIG,aAAe,KAAKC,KAAKP,SACvCQ,KAAAA,SAAWL,IAGxBM,KAAM,WACU,IAAIL,KACN,KAAKI,UACNM,KAAAA,GAAGC,WAAWC,YAAY,KAAKF","file":"ttl.62468ea9.js","sourceRoot":"../src","sourcesContent":["/* global AFRAME */\n\n/**\n * TTL component.\n *\n * When applied to an entity, the entity will remove itself from DOM after the specified number of seconds.\n * Update *is* allowed, which will reset the timer to start from that moment.\n *\n * @member {object} expireAt - Expiration time Date object\n */\nAFRAME.registerComponent('ttl', {\n    schema: {\n        seconds: {type: 'number'},\n    },\n    init: function() {\n        const now = new Date();\n        now.setSeconds(now.getSeconds() + this.data.seconds);\n        this.expireAt = now;\n        this.tick = AFRAME.utils.throttleTick(this.tick, 1000, this);\n    },\n    update: function(oldData) {\n        if (oldData.seconds !== this.data.expireAt) {\n            const now = new Date();\n            now.setSeconds(now.getSeconds() + this.data.seconds);\n            this.expireAt = now;\n        }\n    },\n    tick: function() {\n        const now = new Date();\n        if (now > this.expireAt) {\n            this.el.parentNode.removeChild(this.el);\n        }\n    },\n});\n"]}