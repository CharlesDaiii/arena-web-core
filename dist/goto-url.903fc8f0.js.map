{"version":3,"sources":["components/goto-url.js"],"names":["AFRAME","registerComponent","schema","on","default","url","dest","multiple","init","update","data","el","fired","addEventListener","evt","title","text","buttons","then","confirmed","window","open","location","href","setTimeout","console","log","remove","event","removeEventListener","eventHandlerFn"],"mappings":";AAQA,aANA,IAAA,EAAA,EAAA,QAAA,eAMA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAAA,OAAOC,kBAAkB,WAAY,CAEjCC,OAAQ,CACJC,GAAI,CACAC,QAAS,IAEbC,IAAK,CACDD,QAAS,IAEbE,KAAM,CACFF,QAAS,YAIjBG,UAAU,EAEVC,KAAM,aAGNC,OAAQ,WACEC,MAAAA,EAAO,KAAKA,KACZC,EAAK,KAAKA,GACZC,IAAAA,GAAQ,EACRF,EAAKP,IAAMO,EAAKL,IAChBM,EAAGE,iBAAiBH,EAAKP,GAAI,SAASW,GAE7BF,IACDA,GAAQ,GACH,EAAA,EAAA,SAAA,CACDG,MAAO,wBACPC,KAAM,oCAAsCN,EAAKL,IAAM,KACvDY,QAAS,CAAC,SAAU,SAEnBC,KAAMC,IACCA,GAAAA,EACQT,OAAAA,EAAKJ,MACR,IAAA,QACDc,OAAOC,KAAKX,EAAKL,IAAK,QAAS,wBAC/B,MACC,IAAA,SACDe,OAAOC,KAAKX,EAAKL,IAAK,UACtB,MACC,IAAA,UACL,QACIe,OAAOE,SAASC,KAAOb,EAAKL,OAK5Ce,OAAOI,WAAW,KACdZ,GAAQ,GACT,QAKXa,QAAQC,IAAIhB,IAKpBiB,OAAQ,WACEjB,MAAAA,EAAO,KAAKA,KACZC,EAAK,KAAKA,GAGZD,EAAKkB,OACLjB,EAAGkB,oBAAoBnB,EAAKkB,MAAO,KAAKE","file":"goto-url.903fc8f0.js","sourceRoot":"../src","sourcesContent":["/* global AFRAME */\n\nimport swal from 'sweetalert';\n\n/**\n * Load new URL if clicked\n *\n */\nAFRAME.registerComponent('goto-url', {\n    // load new URL if clicked\n    schema: {\n        on: {\n            default: '',\n        }, // event to listen 'on'\n        url: {\n            default: '',\n        }, // http:// style url\n        dest: {\n            default: 'sametab',\n        }, // newtab\n    },\n\n    multiple: true,\n\n    init: function() {\n    },\n\n    update: function() {\n        const data = this.data; // Component property values.\n        const el = this.el; // Reference to the component's entity.\n        let fired = false;\n        if (data.on && data.url) { // we have an event?\n            el.addEventListener(data.on, function(evt) {\n                // console.log(\"goto-url url=\" + data.url);\n                if (!fired) {\n                    fired = true;\n                    swal({\n                        title: 'You clicked on a URL!',\n                        text: 'Are you sure you want to open \\n[' + data.url + ']?',\n                        buttons: ['Cancel', 'Yes'],\n                    })\n                        .then((confirmed) => {\n                            if (confirmed) {\n                                switch (data.dest) {\n                                case 'popup':\n                                    window.open(data.url, 'popup', 'width=500,height=500');\n                                    break;\n                                case 'newtab':\n                                    window.open(data.url, '_blank');\n                                    break;\n                                case 'sametab':\n                                default:\n                                    window.location.href = data.url;\n                                    break;\n                                }\n                            }\n                        });\n                    window.setTimeout(() => { // prevents event from firing twice after one event\n                        fired = false;\n                    }, 100);\n                }\n            });\n        } else {\n            // `event` not specified, just log the message.\n            console.log(data);\n        }\n    },\n\n    // handle component removal \n    remove: function() {\n        const data = this.data;\n        const el = this.el;\n\n        // remove event listener\n        if (data.event) {\n            el.removeEventListener(data.event, this.eventHandlerFn);\n        }\n    },\n});\n"]}