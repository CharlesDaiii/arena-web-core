{"version":3,"sources":["components/click-listener.js"],"names":["AFRAME","registerComponent","init","self","el","addEventListener","evt","camera","position","document","getElementById","getAttribute","clickPos","vec3ToObject","coordsData","setClickData","detail","thisMsg","object_id","id","action","type","data","source","ARENA","camName","mqtt","publish","outputTopic","setCoordsData","window","lastMouseTarget","undefined"],"mappings":";AAMAA,OAAOC,kBAAkB,iBAAkB,CAEvCC,KAAM,WACIC,MAAAA,EAAO,KAERC,KAAAA,GAAGC,iBAAiB,YAAa,SAASC,GACrCC,MACAC,EADSC,SAASC,eAAe,aACfC,aAAa,YAE/BC,EAAWC,aAAaL,GACxBM,EAAaC,aAAaT,GAE5B,GAAA,aAAcA,EAAIU,OAAQ,CAEpBC,MAAAA,EAAU,CACZC,UAAW,KAAKC,GAChBC,OAAQ,cACRC,KAAM,YACNC,KAAM,CACFV,SAAUA,EACVJ,SAAUM,EACVS,OAAQC,MAAMC,UAGjBtB,EAAKC,GAAGO,aAAa,aACtBa,MAAME,KAAKC,QAAQH,MAAMI,YAAc,KAAKT,GAAIF,MAMvDb,KAAAA,GAAGC,iBAAiB,UAAW,SAASC,GACnCC,MACAC,EADSC,SAASC,eAAe,aACfC,aAAa,YAE/BC,EAAWC,aAAaL,GACxBM,EAAaC,aAAaT,GAE5B,GAAA,aAAcA,EAAIU,OAAQ,CAEpBC,MAAAA,EAAU,CACZC,UAAW,KAAKC,GAChBC,OAAQ,cACRC,KAAM,UACNC,KAAM,CACFV,SAAUA,EACVJ,SAAUM,EACVS,OAAQC,MAAMC,UAGjBtB,EAAKC,GAAGO,aAAa,aACtBa,MAAME,KAAKC,QAAQH,MAAMI,YAAc,KAAKT,GAAIF,MAKvDb,KAAAA,GAAGC,iBAAiB,aAAc,SAASC,GACtCC,MACAC,EADSC,SAASC,eAAe,aACfC,aAAa,YAE/BC,EAAWC,aAAaL,GACxBM,EAAae,cAAcvB,GAE7B,GAAA,aAAcA,EAAIU,OAAQ,CAEpBC,MAAAA,EAAU,CACZC,UAAW,KAAKC,GAChBC,OAAQ,cACRC,KAAM,aACNC,KAAM,CACFV,SAAUA,EACVJ,SAAUM,EACVS,OAAQC,MAAMC,UAGjBtB,EAAKC,GAAGO,aAAa,aACtBa,MAAME,KAAKC,QAAQH,MAAMI,YAAc,KAAKT,GAAIF,GAEpDa,OAAOC,gBAAkB,KAAKZ,MAIjCf,KAAAA,GAAGC,iBAAiB,aAAc,SAASC,GACtCC,MACAC,EADSC,SAASC,eAAe,aACfC,aAAa,YAE/BC,EAAWC,aAAaL,GACxBM,EAAae,cAAcvB,GAE7B,GAAA,aAAcA,EAAIU,OAAQ,CAEpBC,MAAAA,EAAU,CACZC,UAAW,KAAKC,GAChBC,OAAQ,cACRC,KAAM,aACNC,KAAM,CACFV,SAAUA,EACVJ,SAAUM,EACVS,OAAQC,MAAMC,UAGjBtB,EAAKC,GAAGO,aAAa,aACtBa,MAAME,KAAKC,QAAQH,MAAMI,YAAc,KAAKT,GAAIF,GAEpDa,OAAOC,qBAAkBC","file":"click-listener.4ecd9445.js","sourceRoot":"../src","sourcesContent":["/* global AFRAME, ARENA */\n\n/**\n * Listen for clicks, call defined function on event evt\n *\n */\nAFRAME.registerComponent('click-listener', {\n    // listen for clicks, call defined function on event evt\n    init: function() {\n        const self = this;\n\n        this.el.addEventListener('mousedown', function(evt) {\n            const camera = document.getElementById('my-camera');\n            const position = camera.getAttribute('position');\n\n            const clickPos = vec3ToObject(position);\n            const coordsData = setClickData(evt);\n\n            if ('cursorEl' in evt.detail) {\n                // original click event; simply publish to MQTT\n                const thisMsg = {\n                    object_id: this.id,\n                    action: 'clientEvent',\n                    type: 'mousedown',\n                    data: {\n                        clickPos: clickPos,\n                        position: coordsData,\n                        source: ARENA.camName,\n                    },\n                };\n                if (!self.el.getAttribute('goto-url')) {\n                    ARENA.mqtt.publish(ARENA.outputTopic + this.id, thisMsg);\n                }\n            }\n        });\n\n        // console.log(\"mouseup init\");\n        this.el.addEventListener('mouseup', function(evt) {\n            const camera = document.getElementById('my-camera');\n            const position = camera.getAttribute('position');\n\n            const clickPos = vec3ToObject(position);\n            const coordsData = setClickData(evt);\n\n            if ('cursorEl' in evt.detail) {\n                // original click event; simply publish to MQTT\n                const thisMsg = {\n                    object_id: this.id,\n                    action: 'clientEvent',\n                    type: 'mouseup',\n                    data: {\n                        clickPos: clickPos,\n                        position: coordsData,\n                        source: ARENA.camName,\n                    },\n                };\n                if (!self.el.getAttribute('goto-url')) {\n                    ARENA.mqtt.publish(ARENA.outputTopic + this.id, thisMsg);\n                }\n            }\n        });\n\n        this.el.addEventListener('mouseenter', function(evt) {\n            const camera = document.getElementById('my-camera');\n            const position = camera.getAttribute('position');\n\n            const clickPos = vec3ToObject(position);\n            const coordsData = setCoordsData(evt);\n\n            if ('cursorEl' in evt.detail) {\n                // original click event; simply publish to MQTT\n                const thisMsg = {\n                    object_id: this.id,\n                    action: 'clientEvent',\n                    type: 'mouseenter',\n                    data: {\n                        clickPos: clickPos,\n                        position: coordsData,\n                        source: ARENA.camName,\n                    },\n                };\n                if (!self.el.getAttribute('goto-url')) {\n                    ARENA.mqtt.publish(ARENA.outputTopic + this.id, thisMsg);\n                }\n                window.lastMouseTarget = this.id;\n            }\n        });\n\n        this.el.addEventListener('mouseleave', function(evt) {\n            const camera = document.getElementById('my-camera');\n            const position = camera.getAttribute('position');\n\n            const clickPos = vec3ToObject(position);\n            const coordsData = setCoordsData(evt);\n\n            if ('cursorEl' in evt.detail) {\n                // original click event; simply publish to MQTT\n                const thisMsg = {\n                    object_id: this.id,\n                    action: 'clientEvent',\n                    type: 'mouseleave',\n                    data: {\n                        clickPos: clickPos,\n                        position: coordsData,\n                        source: ARENA.camName,\n                    },\n                };\n                if (!self.el.getAttribute('goto-url')) {\n                    ARENA.mqtt.publish(ARENA.outputTopic + this.id, thisMsg);\n                }\n                window.lastMouseTarget = undefined;\n            }\n        });\n    },\n});\n"]}