{"id":"vvWj","dependencies":[{"name":"/home/ubuntu/dev/elu2/package.json","includedInParent":true,"mtime":1610121702865}],"generated":{"js":"AFRAME.registerComponent(\"collision-listener\",{init:function(){this.el.addEventListener(\"collide\",function(i){const t=i.detail.body.el.id;if(\"my-camera\"!==t)return;const e={object_id:this.id,action:\"clientEvent\",type:\"collision\",data:{position:{x:0,y:0,z:0},source:t}};ARENA.mqtt.publish(ARENA.outputTopic+this.id,e)})}});"},"sourceMaps":{"js":{"mappings":[{"source":"components/collision-listener.js","name":"AFRAME","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"components/collision-listener.js","name":"registerComponent","original":{"line":7,"column":7},"generated":{"line":1,"column":7}},{"source":"components/collision-listener.js","original":{"line":7,"column":25},"generated":{"line":1,"column":25}},{"source":"components/collision-listener.js","original":{"line":7,"column":47},"generated":{"line":1,"column":46}},{"source":"components/collision-listener.js","name":"init","original":{"line":9,"column":4},"generated":{"line":1,"column":47}},{"source":"components/collision-listener.js","original":{"line":9,"column":10},"generated":{"line":1,"column":52}},{"source":"components/collision-listener.js","name":"el","original":{"line":11,"column":13},"generated":{"line":1,"column":63}},{"source":"components/collision-listener.js","name":"el","original":{"line":11,"column":13},"generated":{"line":1,"column":68}},{"source":"components/collision-listener.js","name":"addEventListener","original":{"line":11,"column":16},"generated":{"line":1,"column":71}},{"source":"components/collision-listener.js","original":{"line":11,"column":33},"generated":{"line":1,"column":88}},{"source":"components/collision-listener.js","original":{"line":11,"column":44},"generated":{"line":1,"column":98}},{"source":"components/collision-listener.js","name":"evt","original":{"line":11,"column":53},"generated":{"line":1,"column":107}},{"source":"components/collision-listener.js","name":"collider","original":{"line":13,"column":18},"generated":{"line":1,"column":110}},{"source":"components/collision-listener.js","name":"collider","original":{"line":13,"column":18},"generated":{"line":1,"column":116}},{"source":"components/collision-listener.js","name":"evt","original":{"line":13,"column":29},"generated":{"line":1,"column":118}},{"source":"components/collision-listener.js","name":"detail","original":{"line":13,"column":33},"generated":{"line":1,"column":120}},{"source":"components/collision-listener.js","name":"body","original":{"line":13,"column":40},"generated":{"line":1,"column":127}},{"source":"components/collision-listener.js","name":"el","original":{"line":13,"column":45},"generated":{"line":1,"column":132}},{"source":"components/collision-listener.js","name":"id","original":{"line":13,"column":48},"generated":{"line":1,"column":135}},{"source":"components/collision-listener.js","name":"collider","original":{"line":14,"column":16},"generated":{"line":1,"column":138}},{"source":"components/collision-listener.js","original":{"line":14,"column":29},"generated":{"line":1,"column":141}},{"source":"components/collision-listener.js","name":"collider","original":{"line":14,"column":16},"generated":{"line":1,"column":155}},{"source":"components/collision-listener.js","original":{"line":15,"column":16},"generated":{"line":1,"column":157}},{"source":"components/collision-listener.js","name":"coordsData","original":{"line":19,"column":18},"generated":{"line":1,"column":164}},{"source":"components/collision-listener.js","name":"thisMsg","original":{"line":26,"column":18},"generated":{"line":1,"column":170}},{"source":"components/collision-listener.js","original":{"line":26,"column":28},"generated":{"line":1,"column":172}},{"source":"components/collision-listener.js","name":"object_id","original":{"line":27,"column":16},"generated":{"line":1,"column":173}},{"source":"components/collision-listener.js","original":{"line":27,"column":27},"generated":{"line":1,"column":183}},{"source":"components/collision-listener.js","name":"id","original":{"line":27,"column":32},"generated":{"line":1,"column":188}},{"source":"components/collision-listener.js","name":"action","original":{"line":28,"column":16},"generated":{"line":1,"column":191}},{"source":"components/collision-listener.js","original":{"line":28,"column":24},"generated":{"line":1,"column":198}},{"source":"components/collision-listener.js","name":"type","original":{"line":29,"column":16},"generated":{"line":1,"column":212}},{"source":"components/collision-listener.js","original":{"line":29,"column":22},"generated":{"line":1,"column":217}},{"source":"components/collision-listener.js","name":"data","original":{"line":30,"column":16},"generated":{"line":1,"column":229}},{"source":"components/collision-listener.js","original":{"line":30,"column":22},"generated":{"line":1,"column":234}},{"source":"components/collision-listener.js","name":"position","original":{"line":31,"column":20},"generated":{"line":1,"column":235}},{"source":"components/collision-listener.js","original":{"line":19,"column":31},"generated":{"line":1,"column":244}},{"source":"components/collision-listener.js","name":"x","original":{"line":20,"column":16},"generated":{"line":1,"column":245}},{"source":"components/collision-listener.js","original":{"line":20,"column":19},"generated":{"line":1,"column":247}},{"source":"components/collision-listener.js","name":"y","original":{"line":21,"column":16},"generated":{"line":1,"column":249}},{"source":"components/collision-listener.js","original":{"line":21,"column":19},"generated":{"line":1,"column":251}},{"source":"components/collision-listener.js","name":"z","original":{"line":22,"column":16},"generated":{"line":1,"column":253}},{"source":"components/collision-listener.js","original":{"line":22,"column":19},"generated":{"line":1,"column":255}},{"source":"components/collision-listener.js","name":"source","original":{"line":32,"column":20},"generated":{"line":1,"column":258}},{"source":"components/collision-listener.js","name":"collider","original":{"line":32,"column":28},"generated":{"line":1,"column":265}},{"source":"components/collision-listener.js","name":"ARENA","original":{"line":35,"column":12},"generated":{"line":1,"column":269}},{"source":"components/collision-listener.js","name":"mqtt","original":{"line":35,"column":18},"generated":{"line":1,"column":275}},{"source":"components/collision-listener.js","name":"publish","original":{"line":35,"column":23},"generated":{"line":1,"column":280}},{"source":"components/collision-listener.js","name":"ARENA","original":{"line":35,"column":31},"generated":{"line":1,"column":288}},{"source":"components/collision-listener.js","name":"outputTopic","original":{"line":35,"column":37},"generated":{"line":1,"column":294}},{"source":"components/collision-listener.js","original":{"line":35,"column":51},"generated":{"line":1,"column":306}},{"source":"components/collision-listener.js","name":"id","original":{"line":35,"column":56},"generated":{"line":1,"column":311}},{"source":"components/collision-listener.js","name":"thisMsg","original":{"line":35,"column":60},"generated":{"line":1,"column":314}}],"sources":{"components/collision-listener.js":"/* global AFRAME, ARENA */\n\n/**\n * Listen for collisions, callback on event.\n *\n */\nAFRAME.registerComponent('collision-listener', {\n    // listen for collisions, call defined function on event evt\n    init: function() {\n        // console.log(\"collision-listener Component init\");\n        this.el.addEventListener('collide', function(evt) {\n            // colliding object, only act if is clients' own\n            const collider = evt.detail.body.el.id;\n            if (collider !== 'my-camera') {\n                return;\n            }\n\n            // const coordsData = setClickData(evt);\n            const coordsData = {\n                x: 0,\n                y: 0,\n                z: 0,\n            };\n\n            // original click event; simply publish to MQTT\n            const thisMsg = {\n                object_id: this.id,\n                action: 'clientEvent',\n                type: 'collision',\n                data: {\n                    position: coordsData,\n                    source: collider,\n                },\n            };\n            ARENA.mqtt.publish(ARENA.outputTopic + this.id, thisMsg);\n        });\n    },\n});\n"},"lineCount":null}},"error":null,"hash":"c3632c78074ad1689fff8e2d0bd9c32b","cacheData":{"env":{}}}